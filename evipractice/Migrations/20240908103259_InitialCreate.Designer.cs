// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using evipractice.Models;

#nullable disable

namespace evipractice.Migrations
{
    [DbContext(typeof(WorkerDbContext))]
    [Migration("20240908103259_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("evipractice.Models.WorkLog", b =>
                {
                    b.Property<int>("WorkLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkLogId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("WorkLogId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkLogs");

                    b.HasData(
                        new
                        {
                            WorkLogId = 1,
                            Description = "Uttara prject Boundary wall",
                            EndDate = new DateTime(2024, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkerId = 1
                        },
                        new
                        {
                            WorkLogId = 2,
                            Description = "Plustering Baridhara project",
                            StartDate = new DateTime(2024, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkerId = 1
                        });
                });

            modelBuilder.Entity("evipractice.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerId"));

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HireDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PayRate")
                        .HasColumnType("money");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Skill")
                        .HasColumnType("int");

                    b.HasKey("WorkerId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            WorkerId = 1,
                            ContactNo = "01710XXXXXX",
                            HireDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Abul H",
                            PayRate = 1000m,
                            Picture = "e1.jpg",
                            Skill = 1
                        },
                        new
                        {
                            WorkerId = 2,
                            ContactNo = "01910XXXXXX",
                            HireDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Belayet H",
                            PayRate = 1000m,
                            Picture = "e2.jpg",
                            Skill = 2
                        },
                        new
                        {
                            WorkerId = 3,
                            ContactNo = "01610XXXXXX",
                            HireDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Kamrul I",
                            PayRate = 1000m,
                            Picture = "e3.jpg",
                            Skill = 3
                        },
                        new
                        {
                            WorkerId = 4,
                            ContactNo = "01710XXXXXX",
                            HireDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Jubayer H",
                            PayRate = 1000m,
                            Picture = "e4.jpg",
                            Skill = 4
                        },
                        new
                        {
                            WorkerId = 5,
                            ContactNo = "01710XXXXXX",
                            HireDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Imran H",
                            PayRate = 1000m,
                            Picture = "e5.jpg",
                            Skill = 5
                        },
                        new
                        {
                            WorkerId = 6,
                            ContactNo = "01710XXXXXX",
                            HireDate = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Name = "Kedus H",
                            PayRate = 1000m,
                            Picture = "e4.jpg",
                            Skill = 5
                        });
                });

            modelBuilder.Entity("evipractice.Models.WorkLog", b =>
                {
                    b.HasOne("evipractice.Models.Worker", "Worker")
                        .WithMany("WorkLogs")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("evipractice.Models.Worker", b =>
                {
                    b.Navigation("WorkLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
